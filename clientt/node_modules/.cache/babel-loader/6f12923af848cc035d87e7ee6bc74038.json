{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\projects\\\\reactprojects\\\\memories\\\\client\\\\src\\\\auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Avatar, Button, Grid } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles.js';\nimport Input from './Input.js';\nimport Icon from './icon.js';\nconst initialdata = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  pssword: \"\",\n  confirmpassword: \"\"\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [isSignup, setIsSignUp] = useState(true);\n  const [formData, setFormData] = useState(initialdata);\n  const [showPassword, setShowPassWord] = useState(false);\n  const dispatch = useDispatch();\n\n  const googlesuccess = res => {\n    const profile = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          profile,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"google login failed\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignUp(s => !s);\n  };\n\n  const handleShowPassword = () => setShowPassWord(s => !s);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmpassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"884744859070-gnueks577jei3ned1cg7hbtpm2j0v1gt.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            fullWidth: true,\n            color: \"primary\",\n            onClick: renderProps.onClick,\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 141\n            }, this),\n            disabled: renderProps.disabled,\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this),\n          onSuccess: googlesuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? \"Already have an account? Sign In\" : \"Don't have an ccount? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Auth, \"oQg1jIijRB448FH/TlJ3DnjsIEk=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["F:/projects/reactprojects/memories/client/src/auth/Auth.js"],"names":["React","useState","Container","Paper","Typography","Avatar","Button","Grid","GoogleLogin","useDispatch","useHistory","LockOutlinedIcon","useStyles","Input","Icon","initialdata","firstName","lastName","email","pssword","confirmpassword","Auth","classes","history","isSignup","setIsSignUp","formData","setFormData","showPassword","setShowPassWord","dispatch","googlesuccess","res","profile","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","s","handleShowPassword","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {Container,Paper,Typography,Avatar,Button, Grid} from '@material-ui/core'\r\nimport {GoogleLogin} from 'react-google-login'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport useStyles from './styles.js'\r\nimport Input from './Input.js'\r\nimport Icon from './icon.js'\r\n\r\nconst initialdata={firstName:\"\",lastName:\"\",email:\"\",pssword:\"\",confirmpassword:\"\"}\r\n\r\nconst Auth=()=>{\r\n  const classes=useStyles()\r\n  const history=useHistory()\r\n  const [isSignup,setIsSignUp]=useState(true)\r\n  const [formData,setFormData]=useState(initialdata)\r\n  const [showPassword,setShowPassWord]=useState(false)\r\n const dispatch=useDispatch()\r\n  const googlesuccess=(res)=>{\r\n    \r\n      const profile=res?.profileObj;\r\n      const token=res?.tokenId;\r\n      try {\r\n        dispatch({type:'AUTH', data:{profile,token}})\r\n        history.push('/')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n  }\r\n\r\n  const googleFailure=()=>{\r\n    console.log(\"google login failed\")\r\n  }\r\n\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    console.log(formData)\r\n  }\r\n  const handleChange=(e)=>{\r\n    setFormData({...formData,[e.target.name]:e.target.value})\r\n  }\r\n\r\n  const switchMode=()=>{\r\n    setIsSignUp((s)=>!s)\r\n  }\r\n\r\n  const handleShowPassword=()=>(\r\n    setShowPassWord((s)=>!s)\r\n  )\r\n  return (\r\n   <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            { isSignup && (\r\n            <>\r\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n            </>\r\n            )}\r\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"  />\r\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n            { isSignup && <Input name=\"confirmpassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            { isSignup ? 'Sign Up' : 'Sign In' }\r\n          </Button>\r\n          <GoogleLogin \r\n          clientId=\"884744859070-gnueks577jei3ned1cg7hbtpm2j0v1gt.apps.googleusercontent.com\"\r\n          render={(renderProps)=>(\r\n          <Button className={classes.googleButton} fullWidth  color='primary' onClick={renderProps.onClick} variant=\"contained\"  startIcon={<Icon/>} disabled={renderProps.disabled}>Google Sign In</Button>\r\n          )}\r\n          onSuccess={googlesuccess}\r\n          onFailure={googleFailure}\r\n          cookiePolicy='single_host_origin'\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup?\"Already have an account? Sign In\":\"Don't have an ccount? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}