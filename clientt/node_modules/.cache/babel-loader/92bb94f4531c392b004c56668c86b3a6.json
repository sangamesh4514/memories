{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\projects\\\\reactprojects\\\\memories\\\\client\\\\src\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../actions/posts.js';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function Form({\n  currentId,\n  setCurrentId\n}) {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n\n  const clear = () => {\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n    setCurrentId(null);\n  };\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? `Editing ` : `Creating `, \" a memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(\" \")\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        fullWidth: true,\n        className: classes.buttonSubmit,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"5y1mItlIRvUvfx3EJ26f/2arI/4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["F:/projects/reactprojects/memories/client/src/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Paper","Typography","FileBase","createPost","updatePost","useDispatch","useSelector","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","post","state","posts","find","p","_id","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport useStyles from './styles'\r\nimport {TextField,Button,Paper,Typography} from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport {createPost,updatePost} from '../actions/posts.js'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\n\r\n\r\nexport default function Form({currentId,setCurrentId}) {\r\n  const [postData,setPostData]=useState({creator:'',title:'',message:'',tags:'',selectedFile:''})\r\n  const classes=useStyles()\r\n  const dispatch=useDispatch()\r\n  const post=useSelector((state)=>currentId?state.posts.find((p)=>p._id===currentId):null)\r\n  const clear=()=>{\r\n    setPostData({creator:'',title:'',message:'',tags:'',selectedFile:''})\r\n    setCurrentId(null)}\r\n  useEffect(() => {\r\n    if (post) setPostData(post)\r\n   }, [post])\r\n\r\n  const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if(currentId){\r\n          dispatch(updatePost(currentId,postData))\r\n         \r\n        }\r\n        else{\r\n          dispatch(createPost(postData))\r\n        }\r\n         clear()\r\n  }\r\n  return (\r\n    <Paper  className={classes.paper} >\r\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n      <Typography variant=\"h6\">{currentId ?`Editing `:`Creating `} a memory</Typography>\r\n      <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={e=>setPostData({...postData,creator:e.target.value})}/>\r\n      <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={e=>setPostData({...postData,title:e.target.value})}/>\r\n      <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={e=>setPostData({...postData,message:e.target.value})}/>\r\n      <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={e=>setPostData({...postData,tags:e.target.value.split(\" \")})}/>\r\n      <div className={classes.fileInput}>\r\n        <FileBase type='file' multiple={false} onDone={({base64})=>setPostData({...postData,selectedFile:base64})}/>\r\n      </div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"large\" fullWidth className={classes.buttonSubmit} type='submit' >Submit</Button>\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"small\"  onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n\r\n    </Paper>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}